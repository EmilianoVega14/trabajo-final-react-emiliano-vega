{"ast":null,"code":"var _jsxFileName = \"/Users/emilianovega/Desktop/coder--house/react/trabajo-final-react-emiliano-vega/src/context/carritoContext.jsx\",\n  _s = $RefreshSig$();\nimport { useState, createContext } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const carritoContext = /*#__PURE__*/createContext({\n  carrito: [],\n  total: 0,\n  cantidadTotal: 0\n});\n\n// FUNCION PARA AGREGAR PRODUCTOS AL CARRITO Y QUE NO SE REPITAN\n\nexport const CarritoProvider = ({\n  children\n}) => {\n  _s();\n  const [carrito, setCarrito] = useState([]);\n  const [total, setTotal] = useState(0);\n  const [cantidadTotal, setCantidadTotal] = useState(0);\n  const agregarProducto = (item, cantidad) => {\n    const productoExistente = carrito.find(prod => prod.item.id === item.id);\n    if (!productoExistente) {\n      setCarrito(prev => [...prev, {\n        item,\n        cantidad\n      }]);\n      setCantidadTotal(prev => prev + cantidad);\n      setTotal(prev => prev + item.precio * cantidad);\n    } else {\n      const carritoActualizado = carrito.map(prod => {\n        if (prod.item.id === item.id) {\n          return {\n            ...prod,\n            cantidad: prod.cantidad + cantidad\n          };\n        } else {\n          return prod;\n        }\n      });\n      setCarrito(carritoActualizado);\n      setCantidadTotal(prev => prev + cantidad);\n      setTotal(prev => prev + item.precio * cantidad);\n    }\n  };\n\n  // FUNCION PARA ELIMINAR PRODUCTOS\n\n  const eliminarProducto = id => {\n    const productoEliminado = carrito.find(prod => prod.item.id === id);\n    const carritoActualizado = carrito.filter(prod => prod.item.id !== id);\n    setCarrito(carritoActualizado);\n    setCantidadTotal(prev => prev - productoEliminado.cantidad);\n    setTotal(prev => prev - productoEliminado.item.precio * productoEliminado.cantidad);\n  };\n\n  // FUNCION PARA VACIAR EL CARRITO\n\n  const vaciarCarrito = () => {\n    setCarrito([]);\n    setCantidadTotal(0);\n    setTotal(0);\n  };\n  return /*#__PURE__*/_jsxDEV(carritoContext.Provider, {\n    value: {\n      carrito,\n      agregarProducto,\n      eliminarProducto,\n      vaciarCarrito,\n      total,\n      cantidadTotal\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n};\n_s(CarritoProvider, \"mnYstmXPklovQm3KBnVRNJ9J3YI=\");\n_c = CarritoProvider;\nvar _c;\n$RefreshReg$(_c, \"CarritoProvider\");","map":{"version":3,"names":["useState","createContext","jsxDEV","_jsxDEV","carritoContext","carrito","total","cantidadTotal","CarritoProvider","children","_s","setCarrito","setTotal","setCantidadTotal","agregarProducto","item","cantidad","productoExistente","find","prod","id","prev","precio","carritoActualizado","map","eliminarProducto","productoEliminado","filter","vaciarCarrito","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/emilianovega/Desktop/coder--house/react/trabajo-final-react-emiliano-vega/src/context/carritoContext.jsx"],"sourcesContent":["import { useState, createContext } from \"react\";\n\nexport const carritoContext = createContext({\n  carrito: [],\n  total: 0,\n  cantidadTotal: 0,\n});\n\n// FUNCION PARA AGREGAR PRODUCTOS AL CARRITO Y QUE NO SE REPITAN\n\nexport const CarritoProvider = ({ children }) => {\n  const [carrito, setCarrito] = useState([]);\n  const [total, setTotal] = useState(0);\n  const [cantidadTotal, setCantidadTotal] = useState(0);\n\n  const agregarProducto = (item, cantidad) => {\n    const productoExistente = carrito.find((prod) => prod.item.id === item.id);\n\n    if (!productoExistente) {\n      setCarrito((prev) => [...prev, { item, cantidad }]);\n      setCantidadTotal((prev) => prev + cantidad);\n      setTotal((prev) => prev + item.precio * cantidad);\n    } else {\n      const carritoActualizado = carrito.map((prod) => {\n        if (prod.item.id === item.id) {\n          return { ...prod, cantidad: prod.cantidad + cantidad };\n        } else {\n          return prod;\n        }\n      });\n      setCarrito(carritoActualizado);\n      setCantidadTotal((prev) => prev + cantidad);\n      setTotal((prev) => prev + item.precio * cantidad);\n    }\n  };\n\n  // FUNCION PARA ELIMINAR PRODUCTOS\n\n  const eliminarProducto = (id) => {\n    const productoEliminado = carrito.find((prod) => prod.item.id === id);\n    const carritoActualizado = carrito.filter((prod) => prod.item.id !== id);\n\n    setCarrito(carritoActualizado);\n    setCantidadTotal((prev) => prev - productoEliminado.cantidad);\n    setTotal(\n      (prev) =>\n        prev - productoEliminado.item.precio * productoEliminado.cantidad\n    );\n  };\n\n  // FUNCION PARA VACIAR EL CARRITO\n\n  const vaciarCarrito = () => {\n    setCarrito([]);\n    setCantidadTotal(0);\n    setTotal(0);\n  };\n\n  return (\n    <carritoContext.Provider\n      value={{\n        carrito,\n        agregarProducto,\n        eliminarProducto,\n        vaciarCarrito,\n        total,\n        cantidadTotal,\n      }}\n    >\n      {children}\n    </carritoContext.Provider>\n  );\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}