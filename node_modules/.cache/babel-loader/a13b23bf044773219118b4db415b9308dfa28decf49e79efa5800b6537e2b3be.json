{"ast":null,"code":"var _jsxFileName = \"/Users/emilianovega/Desktop/coder--house/react/trabajo-final-react-emiliano-vega/src/Componentes/ItemListContainer/ItemListConteiner.jsx\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport ItemList from \"../ItemList/ItemList\";\nimport { collection, getDocs, query, where } from \"firebase/firestore\";\nimport { db } from \"../../service/config\";\n//import { getUnProductoPorId } from \"../asincmock\";\n// import { getProductos } from \"../asincmock\";\n// Este es el contenedor de la lista de los productos que voy a tener en mi proyecto.\n// esta logica tiene el objetivo solamente de pedir los productos a la base de datos y setear la informacion en un estado.\n// Lo que queremos es tomar la informacion y setearlo en otro componente que se encargue de mostrarlo en una lista.\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ItemListConteiner = ({\n  greetings\n}) => {\n  _s();\n  const [productos, setProductos] = useState([]);\n  const [titulo, setTitulo] = useState(\"productos\");\n  const {\n    idCategoria\n  } = useParams();\n  useEffect(() => {\n    const misProductos = idCategoria ? query(collection(db, \"productos\"), where(\"categoria\", \"==\", idCategoria)) : collection(db, \"productos\");\n    getDocs(misProductos).then(res => {\n      const nuevosProductos = res.docs.map(doc => {\n        const data = doc.data();\n        return {\n          id: doc.id,\n          ...data\n        };\n      });\n      setProductos(nuevosProductos);\n    }).catch(error => console.log(\"Error al obtener productos:\", error));\n  }, [idCategoria]);\n\n  /* useEffect(() => {\n    getProductos().then((res) => {\n      if (categoria) {\n        setProductos(res.filter((prod) => prod.categoria === categoria));\n        setTitulo(categoria);\n      } else {\n        setProductos(res);\n        setTitulo(\"Productos\");\n      }\n    });\n  }, [categoria]); */\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: greetings\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ItemList, {\n      productos: productos,\n      titulo: titulo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n};\n_s(ItemListConteiner, \"rc9sou3LmRWynfX9OTVpWdWTUvo=\", false, function () {\n  return [useParams];\n});\n_c = ItemListConteiner;\nexport default ItemListConteiner;\nvar _c;\n$RefreshReg$(_c, \"ItemListConteiner\");","map":{"version":3,"names":["useState","useEffect","useParams","ItemList","collection","getDocs","query","where","db","jsxDEV","_jsxDEV","ItemListConteiner","greetings","_s","productos","setProductos","titulo","setTitulo","idCategoria","misProductos","then","res","nuevosProductos","docs","map","doc","data","id","catch","error","console","log","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/emilianovega/Desktop/coder--house/react/trabajo-final-react-emiliano-vega/src/Componentes/ItemListContainer/ItemListConteiner.jsx"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport ItemList from \"../ItemList/ItemList\";\nimport { collection, getDocs, query, where } from \"firebase/firestore\";\nimport { db } from \"../../service/config\";\n//import { getUnProductoPorId } from \"../asincmock\";\n// import { getProductos } from \"../asincmock\";\n// Este es el contenedor de la lista de los productos que voy a tener en mi proyecto.\n// esta logica tiene el objetivo solamente de pedir los productos a la base de datos y setear la informacion en un estado.\n// Lo que queremos es tomar la informacion y setearlo en otro componente que se encargue de mostrarlo en una lista.\n\nexport const ItemListConteiner = ({ greetings }) => {\n  const [productos, setProductos] = useState([]);\n  const [titulo, setTitulo] = useState(\"productos\");\n\n  const { idCategoria } = useParams();\n\n  useEffect(() => {\n    const misProductos = idCategoria\n      ? query(\n          collection(db, \"productos\"),\n          where(\"categoria\", \"==\", idCategoria)\n        )\n      : collection(db, \"productos\");\n\n    getDocs(misProductos)\n      .then((res) => {\n        const nuevosProductos = res.docs.map((doc) => {\n          const data = doc.data();\n          return { id: doc.id, ...data };\n        });\n        setProductos(nuevosProductos);\n      })\n      .catch((error) => console.log(\"Error al obtener productos:\", error));\n  }, [idCategoria]);\n\n  /* useEffect(() => {\n    getProductos().then((res) => {\n      if (categoria) {\n        setProductos(res.filter((prod) => prod.categoria === categoria));\n        setTitulo(categoria);\n      } else {\n        setProductos(res);\n        setTitulo(\"Productos\");\n      }\n    });\n  }, [categoria]); */\n\n  return (\n    <div>\n      <h1>{greetings}</h1>\n      <ItemList productos={productos} titulo={titulo} />\n    </div>\n  );\n};\n\nexport default ItemListConteiner;\n"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,SAASC,SAAS,QAAQ,kBAAkB;AAC5C,OAAOC,QAAQ,MAAM,sBAAsB;AAC3C,SAASC,UAAU,EAAEC,OAAO,EAAEC,KAAK,EAAEC,KAAK,QAAQ,oBAAoB;AACtE,SAASC,EAAE,QAAQ,sBAAsB;AACzC;AACA;AACA;AACA;AACA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEA,OAAO,MAAMC,iBAAiB,GAAGA,CAAC;EAAEC;AAAU,CAAC,KAAK;EAAAC,EAAA;EAClD,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACgB,MAAM,EAAEC,SAAS,CAAC,GAAGjB,QAAQ,CAAC,WAAW,CAAC;EAEjD,MAAM;IAAEkB;EAAY,CAAC,GAAGhB,SAAS,CAAC,CAAC;EAEnCD,SAAS,CAAC,MAAM;IACd,MAAMkB,YAAY,GAAGD,WAAW,GAC5BZ,KAAK,CACHF,UAAU,CAACI,EAAE,EAAE,WAAW,CAAC,EAC3BD,KAAK,CAAC,WAAW,EAAE,IAAI,EAAEW,WAAW,CACtC,CAAC,GACDd,UAAU,CAACI,EAAE,EAAE,WAAW,CAAC;IAE/BH,OAAO,CAACc,YAAY,CAAC,CAClBC,IAAI,CAAEC,GAAG,IAAK;MACb,MAAMC,eAAe,GAAGD,GAAG,CAACE,IAAI,CAACC,GAAG,CAAEC,GAAG,IAAK;QAC5C,MAAMC,IAAI,GAAGD,GAAG,CAACC,IAAI,CAAC,CAAC;QACvB,OAAO;UAAEC,EAAE,EAAEF,GAAG,CAACE,EAAE;UAAE,GAAGD;QAAK,CAAC;MAChC,CAAC,CAAC;MACFX,YAAY,CAACO,eAAe,CAAC;IAC/B,CAAC,CAAC,CACDM,KAAK,CAAEC,KAAK,IAAKC,OAAO,CAACC,GAAG,CAAC,6BAA6B,EAAEF,KAAK,CAAC,CAAC;EACxE,CAAC,EAAE,CAACX,WAAW,CAAC,CAAC;;EAEjB;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;EAEE,oBACER,OAAA;IAAAsB,QAAA,gBACEtB,OAAA;MAAAsB,QAAA,EAAKpB;IAAS;MAAAqB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACpB1B,OAAA,CAACP,QAAQ;MAACW,SAAS,EAAEA,SAAU;MAACE,MAAM,EAAEA;IAAO;MAAAiB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC/C,CAAC;AAEV,CAAC;AAACvB,EAAA,CA3CWF,iBAAiB;EAAA,QAIJT,SAAS;AAAA;AAAAmC,EAAA,GAJtB1B,iBAAiB;AA6C9B,eAAeA,iBAAiB;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}